"""empty message

Revision ID: 6e6b36cfa2a7
Revises: None
Create Date: 2016-06-28 10:39:36.366258

"""

# revision identifiers, used by Alembic.
revision = '6e6b36cfa2a7'
down_revision = None

from alembic import op
import sqlalchemy as sa
import databoard

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('extensions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('score_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_lower_the_better', sa.Boolean(), nullable=False),
    sa.Column('minimum', sa.Float(), nullable=False),
    sa.Column('maximum', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('submission_file_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_editable', sa.Boolean(), nullable=True),
    sa.Column('max_size', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('lastname', sa.String(length=256), nullable=False),
    sa.Column('firstname', sa.String(length=256), nullable=False),
    sa.Column('email', sa.String(length=256), nullable=False),
    sa.Column('linkedin_url', sa.String(length=256), nullable=True),
    sa.Column('twitter_url', sa.String(length=256), nullable=True),
    sa.Column('facebook_url', sa.String(length=256), nullable=True),
    sa.Column('google_url', sa.String(length=256), nullable=True),
    sa.Column('github_url', sa.String(length=256), nullable=True),
    sa.Column('website_url', sa.String(length=256), nullable=True),
    sa.Column('hidden_notes', sa.String(), nullable=True),
    sa.Column('bio', sa.String(length=1024), nullable=True),
    sa.Column('is_want_news', sa.Boolean(), nullable=True),
    sa.Column('access_level', sa.Enum('admin', 'user', 'asked', name='access_level'), nullable=True),
    sa.Column('signup_timestamp', sa.DateTime(), nullable=False),
    sa.Column('is_authenticated', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name')
    )
    op.create_table('workflows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('problems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('submission_file_type_extensions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('extension_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['extension_id'], ['extensions.id'], ),
    sa.ForeignKeyConstraint(['type_id'], ['submission_file_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type_id', 'extension_id', name='we_constraint')
    )
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('initiator_id', sa.Integer(), nullable=True),
    sa.Column('acceptor_id', sa.Integer(), nullable=True),
    sa.Column('creation_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['acceptor_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['initiator_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('workflow_element_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['submission_file_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('max_members_per_team', sa.Integer(), nullable=True),
    sa.Column('max_n_ensemble', sa.Integer(), nullable=True),
    sa.Column('is_send_trained_mails', sa.Boolean(), nullable=True),
    sa.Column('is_send_submitted_mails', sa.Boolean(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_controled_signup', sa.Boolean(), nullable=True),
    sa.Column('min_duration_between_submissions', sa.Integer(), nullable=True),
    sa.Column('opening_timestamp', sa.DateTime(), nullable=True),
    sa.Column('public_opening_timestamp', sa.DateTime(), nullable=True),
    sa.Column('closing_timestamp', sa.DateTime(), nullable=True),
    sa.Column('official_score_name', sa.String(), nullable=True),
    sa.Column('combined_combined_valid_score', sa.Float(), nullable=True),
    sa.Column('combined_combined_test_score', sa.Float(), nullable=True),
    sa.Column('combined_foldwise_valid_score', sa.Float(), nullable=True),
    sa.Column('combined_foldwise_test_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['problem_id'], ['problems.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('workflow_elements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('workflow_element_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['workflow_element_type_id'], ['workflow_element_types.id'], ),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cv_folds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('live', 'test', name='cv_fold_types'), nullable=True),
    sa.Column('train_is', databoard.model.NumpyType(), nullable=False),
    sa.Column('test_is', databoard.model.NumpyType(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event_score_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('score_type_id', sa.Integer(), nullable=False),
    sa.Column('precision', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['score_type_id'], ['score_types.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'name', name='en_constraint'),
    sa.UniqueConstraint('event_id', 'score_type_id', name='es_constraint')
    )
    op.create_table('event_teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_submission_name', sa.String(), nullable=True),
    sa.Column('signup_timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_id', 'team_id', name='et_constraint')
    )
    op.create_table('submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_team_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20, convert_unicode=True), nullable=False),
    sa.Column('hash_', sa.String(), nullable=False),
    sa.Column('submission_timestamp', sa.DateTime(), nullable=False),
    sa.Column('training_timestamp', sa.DateTime(), nullable=True),
    sa.Column('contributivity', sa.Float(), nullable=True),
    sa.Column('historical_contributivity', sa.Float(), nullable=True),
    sa.Column('type', sa.Enum('live', 'test', name='submission_types'), nullable=True),
    sa.Column('state', sa.Enum('new', 'checked', 'checking_error', 'trained', 'training_error', 'validated', 'validating_error', 'tested', 'testing_error', name='submission_states'), nullable=True),
    sa.Column('error_msg', sa.String(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.Column('is_to_ensemble', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('train_time_cv_mean', sa.Float(), nullable=True),
    sa.Column('valid_time_cv_mean', sa.Float(), nullable=True),
    sa.Column('test_time_cv_mean', sa.Float(), nullable=True),
    sa.Column('train_time_cv_std', sa.Float(), nullable=True),
    sa.Column('valid_time_cv_std', sa.Float(), nullable=True),
    sa.Column('test_time_cv_std', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['event_team_id'], ['event_teams.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('event_team_id', 'name', name='ts_constraint')
    )
    op.create_index(op.f('ix_submissions_hash_'), 'submissions', ['hash_'], unique=True)
    op.create_table('submission_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('workflow_element_id', sa.Integer(), nullable=False),
    sa.Column('submission_file_type_extension_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['submission_file_type_extension_id'], ['submission_file_type_extensions.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['workflow_element_id'], ['workflow_elements.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission_on_cv_folds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('cv_fold_id', sa.Integer(), nullable=False),
    sa.Column('contributivity', sa.Float(), nullable=True),
    sa.Column('best', sa.Boolean(), nullable=True),
    sa.Column('full_train_y_pred', databoard.model.NumpyType(), nullable=True),
    sa.Column('test_y_pred', databoard.model.NumpyType(), nullable=True),
    sa.Column('train_time', sa.Float(), nullable=True),
    sa.Column('valid_time', sa.Float(), nullable=True),
    sa.Column('test_time', sa.Float(), nullable=True),
    sa.Column('state', sa.Enum('new', 'checked', 'checking_error', 'trained', 'training_error', 'validated', 'validating_error', 'tested', 'testing_error', name='submission_states'), nullable=True),
    sa.Column('error_msg', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['cv_fold_id'], ['cv_folds.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id', 'cv_fold_id', name='sc_constraint')
    )
    op.create_table('submission_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=False),
    sa.Column('event_score_type_id', sa.Integer(), nullable=False),
    sa.Column('valid_score_cv_bag', sa.Float(), nullable=True),
    sa.Column('test_score_cv_bag', sa.Float(), nullable=True),
    sa.Column('valid_score_cv_bags', databoard.model.NumpyType(), nullable=True),
    sa.Column('test_score_cv_bags', databoard.model.NumpyType(), nullable=True),
    sa.ForeignKeyConstraint(['event_score_type_id'], ['event_score_types.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission_similaritys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('target_credit', 'source_credit', 'thirdparty_credit', name='submission_similarity_type'), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('similarity', sa.Float(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('source_submission_id', sa.Integer(), nullable=True),
    sa.Column('target_submission_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['target_submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('submission_score_on_cv_folds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_on_cv_fold_id', sa.Integer(), nullable=False),
    sa.Column('submission_score_id', sa.Integer(), nullable=False),
    sa.Column('train_score', sa.Float(), nullable=True),
    sa.Column('valid_score', sa.Float(), nullable=True),
    sa.Column('test_score', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['submission_on_cv_fold_id'], ['submission_on_cv_folds.id'], ),
    sa.ForeignKeyConstraint(['submission_score_id'], ['submission_scores.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_on_cv_fold_id', 'submission_score_id', name='ss_constraint')
    )
    op.create_table('user_interactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('interaction', sa.Enum('copy', 'download', 'giving credit', 'landing', 'login', 'logout', 'looking at error', 'looking at event', 'looking at leaderboard', 'looking at my_submissions', 'looking at private leaderboard', 'looking at submission', 'looking at user', 'save', 'signing up at event', 'submit', 'upload', name='user_interaction_type'), nullable=False),
    sa.Column('note', sa.String(), nullable=True),
    sa.Column('submission_file_diff', sa.String(), nullable=True),
    sa.Column('submission_file_similarity', sa.Float(), nullable=True),
    sa.Column('ip', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('event_team_id', sa.Integer(), nullable=True),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('submission_file_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['event_team_id'], ['event_teams.id'], ),
    sa.ForeignKeyConstraint(['submission_file_id'], ['submission_files.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['submissions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_interactions')
    op.drop_table('submission_score_on_cv_folds')
    op.drop_table('submission_similaritys')
    op.drop_table('submission_scores')
    op.drop_table('submission_on_cv_folds')
    op.drop_table('submission_files')
    op.drop_index(op.f('ix_submissions_hash_'), table_name='submissions')
    op.drop_table('submissions')
    op.drop_table('event_teams')
    op.drop_table('event_score_types')
    op.drop_table('event_admins')
    op.drop_table('cv_folds')
    op.drop_table('workflow_elements')
    op.drop_table('events')
    op.drop_table('workflow_element_types')
    op.drop_table('teams')
    op.drop_table('submission_file_type_extensions')
    op.drop_table('problems')
    op.drop_table('workflows')
    op.drop_table('users')
    op.drop_table('submission_file_types')
    op.drop_table('score_types')
    op.drop_table('extensions')
    ### end Alembic commands ###
